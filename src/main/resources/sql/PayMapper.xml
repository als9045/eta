<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.pe.eta.service.pay.PayDao">

  <resultMap type="Pay" id="paySelectMap">
      <result property="callNo"   column="CALL_NO"      jdbcType="NUMERIC"/>
      <result property="payType"   column="PAY_TYPE"      jdbcType="VARCHAR"/>
      <result property="payDate"     column="PAY_DATE"     jdbcType="DATE"/>
      <result property="money"     column="MONEY"     jdbcType="NUMERIC"/>
  </resultMap>
  
  <resultMap id="cashDriverSelectMap" type="Call">
    <result property="callDate" column="call_month"    jdbcType="VARCHAR" />
    <result property="realPay"         column="total_real_pay"          jdbcType="NUMERIC" />
    <result property="userNo"         column="driver_no"          jdbcType="NUMERIC" />
    <result property="star"         column="cash_code"          jdbcType="NUMERIC" />
  </resultMap>
  
    <resultMap id="cashDriverCompleteSelectMap" type="Call">
    <result property="callDate" column="call_month"    jdbcType="VARCHAR" />
    <result property="realPay"         column="cash_total"          jdbcType="NUMERIC" />
    <result property="userNo"         column="cash_driver_no"          jdbcType="NUMERIC" />
  </resultMap>
  
  <resultMap id="myCashSelectMap" type="Call">
    <result property="callNo" column="call_no"    jdbcType="NUMERIC" />
    <result property="callDate"         column="call_date"          jdbcType="DATE" />
    <result property="realPay"         column="real_pay"          jdbcType="NUMERIC" />
    <result property="star"         column="cash_code"          jdbcType="NUMERIC" />
  </resultMap>
  
    <resultMap id="myCashCompleteSelectMap" type="Call">
    <result property="callNo" column="call_no"    jdbcType="NUMERIC" />
    <result property="callDate"         column="call_date"          jdbcType="DATE" />
    <result property="realPay"         column="cash_total"          jdbcType="NUMERIC" />
    <result property="star"         column="cash_code"          jdbcType="NUMERIC" />
  </resultMap>

  <select id="getMyMoney" parameterType="int" resultType="int">
       SELECT my_money FROM users WHERE user_no=#{userNo:NUMERIC}
  </select>

  <insert  id="addCharge"    parameterType="map" >             
       INSERT INTO pay (pay_no, user_no, call_no, pay_type, pay_date, money, role) 
       VALUES (seq_pay_pay_no.NEXTVAL, #{userNo:NUMERIC}, null, '충전', SYSDATE, #{Tpay:NUMERIC}, 'passenger')
  </insert>
   
  <update id="updateMyMoney" parameterType="map">
       UPDATE users SET my_money = #{updateMyMoney:NUMERIC} WHERE user_no =  #{userNo:NUMERIC}
  </update>
   
  <select id="getTpayList" parameterType="map" resultMap="paySelectMap">
    <if test="month == 'all'">
       SELECT call_no, pay_type, pay_date, money FROM pay WHERE user_no =  #{userNo:NUMERIC} ORDER BY pay_date DESC
    </if>
    <if test="month != 'all'">
       SELECT call_no, pay_type, pay_date, money FROM pay WHERE user_no = #{userNo:NUMERIC} AND TO_CHAR(pay_date, 'MM') = #{month:VARCHAR} ORDER BY pay_date DESC
    </if>
  </select>
  
  <insert  id="addPay"    parameterType="Pay" >            
       INSERT INTO pay (pay_no, user_no, call_no, pay_type, pay_date, money, role) 
       VALUES (seq_pay_pay_no.NEXTVAL, #{userNo:NUMERIC}, #{callNo:NUMERIC}, #{payType:VARCHAR}, SYSDATE, #{money:NUMERIC}, 'passenger')
  </insert>
  
  <select id="getCashDriverList"  parameterType="String" resultMap="cashDriverSelectMap">
    <if test="month == 'all'">
				 SELECT
					    M.driver_no,
					    TO_CHAR(C.call_date, 'YYYY-MM') AS call_month,
					    SUM(C.real_pay) AS total_real_pay,
					    COALESCE(CA.cash_code, 0) AS cash_code
					FROM
					    call C
					JOIN
					    match M ON C.call_no = M.call_no
					LEFT JOIN
					    cash CA ON TO_CHAR(C.call_date, 'YYYY-MM') = CA.cash_month AND M.driver_no = CA.cash_driver_no
					WHERE
					    M.driver_no IS NOT NULL
					GROUP BY
					    M.driver_no, TO_CHAR(C.call_date, 'YYYY-MM'), CA.cash_code
					ORDER BY
					    M.driver_no, TO_CHAR(C.call_date, 'YYYY-MM'), CA.cash_code
		 </if>
		 <if test="month != 'all'">
		    SELECT
            M.driver_no,
            TO_CHAR(C.call_date, 'YYYY-MM') AS call_month,
            SUM(C.real_pay) AS total_real_pay,
            COALESCE(CA.cash_code,0) AS cash_code
        FROM
            call C
        JOIN
            match M ON C.call_no = M.call_no
        LEFT JOIN
            cash CA ON TO_CHAR(C.call_date, 'YYYY-MM') = CA.cash_month AND M.driver_no = CA.cash_driver_no
        WHERE
            M.driver_no IS NOT NULL AND TO_CHAR(C.call_date, 'MM') = #{month:VARCHAR}
        GROUP BY
            M.driver_no, TO_CHAR(C.call_date, 'YYYY-MM'), CA.cash_code
		 </if>
  </select>
  
    <select id="getCashDriverListComplete"  parameterType="String" resultMap="cashDriverCompleteSelectMap">
    <if test="month == 'all'">
         SELECT cash_driver_no, cash_month, cash_total
         FROM cash ORDER BY cash_month DESC
     </if>
     <if test="month != 'all'">
        SELECT cash_driver_no, cash_month, cash_total
        FROM cash
        WHERE SUBSTR(cash_month, 6, 2) = #{month:VARCHAR} ORDER BY cash_month DESC
     </if>
  </select>
  
   <select id="getCashDriverListWait"  parameterType="String" resultMap="cashDriverSelectMap">
    <if test="month == 'all'">
         SELECT
              M.driver_no,
              TO_CHAR(C.call_date, 'YYYY-MM') AS call_month,
              SUM(C.real_pay) AS total_real_pay,
              COALESCE(CA.cash_code, 0) AS cash_code
          FROM
              call C
          JOIN
              match M ON C.call_no = M.call_no
          LEFT JOIN
              cash CA ON TO_CHAR(C.call_date, 'YYYY-MM') = CA.cash_month AND M.driver_no = CA.cash_driver_no
          WHERE
              M.driver_no IS NOT NULL AND (CA.cash_code = 0 OR CA.cash_code IS NULL)
          GROUP BY
              M.driver_no, TO_CHAR(C.call_date, 'YYYY-MM'), CA.cash_code
          ORDER BY
              M.driver_no, TO_CHAR(C.call_date, 'YYYY-MM'), CA.cash_code
     </if>
     <if test="month != 'all'">
        SELECT
            M.driver_no,
            TO_CHAR(C.call_date, 'YYYY-MM') AS call_month,
            SUM(C.real_pay) AS total_real_pay,
            COALESCE(CA.cash_code,0) AS cash_code
        FROM
            call C
        JOIN
            match M ON C.call_no = M.call_no
        LEFT JOIN
            cash CA ON TO_CHAR(C.call_date, 'YYYY-MM') = CA.cash_month AND M.driver_no = CA.cash_driver_no
        WHERE
            M.driver_no IS NOT NULL AND TO_CHAR(C.call_date, 'MM') = #{month:VARCHAR} AND (CA.cash_code = 0 OR CA.cash_code IS NULL)
        GROUP BY
            M.driver_no, TO_CHAR(C.call_date, 'YYYY-MM'), CA.cash_code
     </if>
  </select>
  
  <insert  id="addCash"    parameterType="Cash" >            
       INSERT INTO cash (cash_no, cash_driver_no, cash_month, cash_total, cash_code, cash_date) 
       VALUES (seq_cash_cash_no.NEXTVAL, #{cashDriverNo:NUMERIC}, #{cashMonth:VARCHAR}, #{cashTotal:NUMERIC}, 1, SYSDATE)
  </insert>
  
  <select id="getMyCashList"  parameterType="map" resultMap="myCashSelectMap">
    <if test="month == 'all'">
        SELECT C.call_no, C.call_date, C.real_pay, COALESCE(CA.cash_code,0) AS cash_code
        FROM call C
        JOIN match M ON C.call_no = M.call_no
        LEFT JOIN cash CA ON TO_CHAR(C.call_date, 'YYYY-MM') = CA.cash_month AND M.driver_no = CA.cash_driver_no
        WHERE M.driver_no = #{userNo:NUMERIC}
    </if>
    <if test="month != 'all'">
        SELECT C.call_no, C.call_date, C.real_pay, COALESCE(CA.cash_code,0) AS cash_code
        FROM call C
        JOIN match M ON C.call_no = M.call_no
        LEFT JOIN cash CA ON TO_CHAR(C.call_date, 'YYYY-MM') = CA.cash_month AND M.driver_no = CA.cash_driver_no
        WHERE M.driver_no = #{userNo:NUMERIC} AND TO_CHAR(C.call_date, 'MM') = #{month:VARCHAR}
    </if>
     
  </select>
  
    <select id="getMyCashListComplete"  parameterType="map" resultMap="myCashCompleteSelectMap">
    <if test="month == 'all'">
        SELECT cash_month, cash_total
        FROM cash
        WHERE cash_driver_no = #{userNo:NUMERIC} ORDER BY cash_month DESC
    </if>
    <if test="month != 'all'">
       SELECT cash_month, cash_total
       FROM cash
       WHERE cash_driver_no = #{userNo:NUMERIC} AND SUBSTR(cash_month, 6, 2) = #{month:VARCHAR} ORDER BY cash_month DESC
    </if>
     
  </select>
  
      <select id="getMyCashListWait"  parameterType="map" resultMap="myCashSelectMap">
    <if test="month == 'all'">
        SELECT C.call_no, C.call_date, C.real_pay, COALESCE(CA.cash_code,0) AS cash_code
        FROM call C
        JOIN match M ON C.call_no = M.call_no
        LEFT JOIN cash CA ON TO_CHAR(C.call_date, 'YYYY-MM') = CA.cash_month AND M.driver_no = CA.cash_driver_no
        WHERE M.driver_no = #{userNo:NUMERIC} AND (CA.cash_code = 0 OR CA.cash_code IS NULL)
    </if>
    <if test="month != 'all'">
        SELECT C.call_no, C.call_date, C.real_pay, COALESCE(CA.cash_code,0) AS cash_code
        FROM call C
        JOIN match M ON C.call_no = M.call_no
        LEFT JOIN cash CA ON TO_CHAR(C.call_date, 'YYYY-MM') = CA.cash_month AND M.driver_no = CA.cash_driver_no
        WHERE M.driver_no = #{userNo:NUMERIC} AND TO_CHAR(C.call_date, 'MM') = #{month:VARCHAR} AND (CA.cash_code = 0 OR CA.cash_code IS NULL)
    </if>
     
  </select>
  
    <update id="updateRealPay" parameterType="map">
       UPDATE call SET real_pay = #{money:NUMERIC} where call_no = #{callNo:NUMERIC}
  </update>

</mapper>