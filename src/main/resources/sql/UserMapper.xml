<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.pe.eta.service.user.UserDao">
  
    <resultMap id="userSelectMap" type="user">
    <result property="userNo" column="user_no" jdbcType="NUMERIC"/>
    <result property="name" column="name" jdbcType="VARCHAR"/>
    <result property="email" column="email" jdbcType="VARCHAR"/>
    <result property="pwd" column="pwd" jdbcType="VARCHAR"/>
    <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
    <result property="birth" column="birth" jdbcType="VARCHAR"/>
    <result property="gender" column="gender" jdbcType="NUMERIC"/>
    <result property="phone" column="phone" jdbcType="VARCHAR"/>
    <result property="role" column="role" jdbcType="VARCHAR"/>
    <result property="blockCode" column="block_code" jdbcType="NUMERIC"/>
    <result property="shareCode" column="share_code" jdbcType="NUMERIC"/>
    <result property="dealCode" column="deal_code" jdbcType="NUMERIC"/>
    <result property="carOpt" column="car_opt" jdbcType="NUMERIC"/>
    <result property="petOpt" column="pet_opt" jdbcType="NUMERIC"/>
    <result property="carNum" column="car_num" jdbcType="VARCHAR"/>
    <result property="bank" column="bank" jdbcType="VARCHAR"/>
    <result property="account" column="account" jdbcType="VARCHAR"/>
    <result property="myMoney" column="my_money" jdbcType="NUMERIC"/>
    <result property="regDate" column="reg_date" jdbcType="DATE"/>
</resultMap>

<insert id="addUser" parameterType="user">
   <![CDATA[
  DECLARE
    v_user_no NUMBER;
  BEGIN
        INSERT INTO users (
        user_no, email, pwd, name, nick_name, birth, gender, phone,
        role, block_code, car_opt, pet_opt, car_num, bank, account, reg_date, my_money,
        deal_code, share_code
            )
   VALUES (
    seq_users_user_no.NEXTVAL, #{email:VARCHAR}, #{pwd:VARCHAR}, #{name:VARCHAR}, #{nickName:VARCHAR}, #{birth:VARCHAR}, #{gender:NUMERIC},
    #{phone:VARCHAR}, #{role:VARCHAR}, 0, #{carOpt:NUMERIC}, #{petOpt:NUMERIC}, #{carNum:VARCHAR}, #{bank:VARCHAR},
    #{account:VARCHAR}, SYSDATE, 0, 0, 0
) RETURNING user_no INTO v_user_no;

    INSERT INTO likes (pri_like_no, like_no, user_no, like_name, like_addr, like_x, like_y) VALUES (seq_likes_pri_like_no.NEXTVAL, 1000, v_user_no, '집', null, null, null);
      INSERT INTO likes (pri_like_no, like_no, user_no, like_name, like_addr, like_x, like_y) VALUES (seq_likes_pri_like_no.NEXTVAL, 1001, v_user_no, '회사', null, null, null);
      INSERT INTO likes (pri_like_no, like_no, user_no, like_name, like_addr, like_x, like_y) VALUES (seq_likes_pri_like_no.NEXTVAL, 1002, v_user_no, null, null, null, null);      
  END;
    ]]>
</insert>

  
    <select id="getUser" parameterType="string" resultMap="userSelectMap">
        SELECT *
        FROM users
        WHERE email = #{email}
    </select>
    
    <select id="getUserPhone" parameterType="string" resultMap="userSelectMap">
        SELECT *
        FROM users
        WHERE phone = #{phone}
    </select>
    
      <select id="getPhone" parameterType="string" >
        SELECT phone
        FROM users
        WHERE phone = #{phone}
    </select>
    
    <select id="getUsers" parameterType="int" resultMap="userSelectMap">
        SELECT *
        FROM users
        WHERE user_no = #{userNo}
    </select>
    
<update id="updateUser" parameterType="user">
  UPDATE users
  <set>
    <if test="role == 'passenger' ">
      name = #{name},
      phone = #{phone}
    </if>
    <if test="role == 'driver' ">
      name = #{name},
      phone = #{phone},
      car_opt = #{carOpt},
      car_num = #{carNum},
      bank = #{bank},
      account = #{account},
      pet_opt = #{petOpt}
    </if>
  </set>
  WHERE user_no = #{userNo}
</update>




    
      <select id= "getUserList" parameterType="search" resultMap="userSelectMap">
     SELECT *
     FROM ( SELECT inner_table.* , ROWNUM AS row_seq
                      FROM(SELECT user_no, name, email, role 
                            FROM users
                            <where>
                        <if test="searchKeyword !='' and searchKeyword !=null">
                  name LIKE '%'||#{searchKeyword}||'%'
                </if> 
                </where>
                   ORDER BY user_no ) inner_table
            WHERE ROWNUM &lt;= #{endRowNum} )
    WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}  
   </select>
   
    <select id= "autoUserList" parameterType="search" resultMap="userSelectMap">
     SELECT *
     FROM ( SELECT inner_table.* , ROWNUM AS row_seq
                      FROM(SELECT user_no, name, email, role 
                            FROM users
                        
                        <where>                       
                          <if test="searchCondition == 1 and searchKeyword !='' ">
                            name LIKE '%' || #{searchKeyword} || '%'
                          </if>
                        </where>
                     
                   ORDER BY user_no ) inner_table)          
   </select>
    
    <select id="getTotalCount" parameterType="search" resultType="int">
    
    SELECT count(*)
    FROM  ( SELECT user_no, name, email, role 
              FROM users
           <where>                       
            <if test="searchCondition == 1 and searchKeyword !='' ">
              name LIKE '%' || #{searchKeyword} || '%'
            </if>
          </where>
            ORDER BY user_no ) inner_table          
    
    </select>
   
  <delete id="deleteUser" parameterType="int">
   <![CDATA[
  BEGIN
     DELETE FROM likes
   WHERE user_no = #{userNo};

   DELETE FROM users
   WHERE user_no = #{userNo};
  END;
    ]]>
</delete>


 <update id="updatePwd" parameterType="user">
  UPDATE users
  <set>
    pwd = #{pwd, jdbcType=VARCHAR},  <!-- 비밀번호를 안전하게 저장하려면 VARCHAR 타입으로 설정 -->
  </set>
  WHERE email = #{email, jdbcType=VARCHAR}
</update>

  
      <select id="getNickName" parameterType="string"  resultMap="userSelectMap">
        SELECT nick_name
        FROM users
        WHERE nick_name = #{nickName}
    </select>
    
     <select id="getEmail" parameterType="string" resultMap="userSelectMap">
        SELECT *
        FROM users
        WHERE email = #{email}
    </select>
       <select  id="getPassengerCount"  parameterType="search"   resultType="int">
      SELECT COUNT(*)
         FROM(SELECT user_no, name, email, role 
                            FROM users where role ='passenger'
                        <if test="searchCondition != null">
                        <where>
                          <if test="searchCondition == 0 and searchKeyword !='' ">
                            email LIKE '%' || #{searchKeyword} || '%'
                          </if>
                          <if test="searchCondition == 1 and searchKeyword !='' ">
                            name LIKE '%' || #{searchKeyword} || '%'
                          </if>
                        </where>
                      </if>) countTable            
   </select>
   
       <select  id="getDriverCount"  parameterType="search"   resultType="int">
      SELECT COUNT(*)
         FROM(SELECT user_no, name, email, role 
                            FROM users where role ='driver'
                        <if test="searchCondition != null">
                        <where>
                          <if test="searchCondition == 0 and searchKeyword !='' ">
                            email LIKE '%' || #{searchKeyword} || '%'
                          </if>
                          <if test="searchCondition == 1 and searchKeyword !='' ">
                            name LIKE '%' || #{searchKeyword} || '%'
                          </if>
                        </where>
                      </if>) countTable            
   </select>
</mapper>